Thu May 22 08:04:54 2025    profiling_optimizado.prof

         200032 function calls in 0.585 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.585    0.585 {built-in method builtins.exec}
        1    0.000    0.000    0.585    0.585 <string>:1(<module>)
        1    0.000    0.000    0.585    0.585 <ipython-input-8-62ac3affea3e>:2(ejecutar_codigo_optimizado)
        1    0.031    0.031    0.585    0.585 <ipython-input-8-62ac3affea3e>:17(<listcomp>)
   100000    0.540    0.000    0.554    0.000 <ipython-input-8-62ac3affea3e>:7(es_primo)
    99999    0.014    0.000    0.014    0.000 {built-in method math.isqrt}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
        2    0.000    0.000    0.000    0.000 iostream.py:526(write)
        2    0.000    0.000    0.000    0.000 iostream.py:456(_schedule_flush)
        1    0.000    0.000    0.000    0.000 iostream.py:202(schedule)
        1    0.000    0.000    0.000    0.000 socket.py:545(send)
        1    0.000    0.000    0.000    0.000 threading.py:1192(is_alive)
        2    0.000    0.000    0.000    0.000 iostream.py:437(_is_master_process)
        1    0.000    0.000    0.000    0.000 threading.py:1125(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
        1    0.000    0.000    0.000    0.000 iostream.py:90(_event_pipe)
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
        2    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 threading.py:575(is_set)
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}


